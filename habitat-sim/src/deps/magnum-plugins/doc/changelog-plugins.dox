/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
                2020, 2021 Vladimír Vondruš <mosra@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

namespace Magnum {

/** @page changelog-plugins Plugins

@tableofcontents
@m_footernavigation

@section changelog-plugins-latest Changes since 2020.06

@subsection changelog-plugins-latest-new New features

-   New @ref ShaderTools::SpirvToolsConverter "SpirvToolsShaderConverter"
    plugin for SPIR-V shader (dis)assembly and validation
-   New @ref ShaderTools::GlslangConverter "GlslangShaderConverter" plugin for
    GLSL shader validation and GLSL->SPIR-V compilation
-   New @ref Trade::OpenExrImporter "OpenExrImporter" and
    @ref Trade::OpenExrImageConverter "OpenExrImageConverter" plugins for
    reading and writing OpenEXR files, including cube map, custom channel,
    multi-part and deep image support
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" material import was
    reworked for the new @ref Trade::MaterialData API, supporting all core
    properties as well as everything from the
    [KHR_materials_pbrSpecularGlossiness](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness),
    [KHR_materials_unlit](https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_materials_unlit/README.md)
    and [KHR_materials_clearcoat](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat)
    extensions. All the previous limitations on texture transformation or
    coordinate set variability are now gone.
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now imports skins through
    @ref Trade::AbstractImporter::skin3D(), @ref Trade::MeshObjectData3D::skin()
    and related APIs
-   @ref Trade::AssimpImporter "AssimpImporter" now imports ambient lights,
    light attenuation and spotlight cone angle properties
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now imports light range and
    spotlight cone angle properties

@subsection changelog-plugins-latest-changes Changes and improvements

-   The workaround for an Assimp 4.1 white ambient bug in
    @ref Trade::AssimpImporter "AssimpImporter" can now be disabled using the
    @cb{.ini} forceWhiteAmbientToBlack @ce @ref Trade-AssimpImporter-configuration "plugin-specific option".
-   @ref Text::FreeTypeFont "FreeTypeFont" now treats its internal global
    library handle as thread-local on all platforms except Windows, making it
    possible to be used in multi-threaded environments
-   @ref Trade::StanfordImporter "StanfordImporter" now supports also indices
    specified as `vertex_index`, which is what Assimp uses for export (see
    [mosra/magnum-plugins#94](https://github.com/mosra/magnum-plugins/pull/94))
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now performs range checks
    on scene, node, camera, mesh, material, child and light references in the
    scene hierarchy for more robust handling of broken files
-   @ref Trade::StbImageImporter "StbImageImporter" now imports 16-bit PNG and
    PSD files as 16-bit instead of converting to 8 bit
-   @ref Trade::StbImageImporter "StbImageImporter" now makes it possible to
    override imported image channel count using @cb{.ini} forceChannelCount @ce
-   @ref Audio::DrFlacImporter "DrFlacAudioImporter" no longer advertises
    support for 32-bit-per-channel FLAC files, as there's no known way to
    produce them and thus the case is impossible to test for.

@subsection changelog-plugins-latest-buildsystem Build system

-   The `versionPlugins.h` header now gets populated from Git correctly also
    when inside a CMake subproject
-   Linux, Emscripten and macOS builds were migrated from Travis to Circle CI
-   `UseEmscripten` is no longer implicitly included on Emscripten as it's not
    needed for anything (see [mosra/magnum#490](https://github.com/mosra/magnum/issues/490))
-   On CMake 3.16 and newer, `FindMagnumPlugins.cmake` can provide additional
    details if some component is not found.
-   `FindAssimp.cmake` now attempts to use installed Assimp CMake config files,
    if they are not broken, to correctly find and link to all dependencies in
    case of a static build. This is mainly to support static builds in Vcpkg,
    vanilla Assimp 5.0.1 config files are irreparably broken on all platforms
    except dynamic Windows builds.
-   The Homebrew package now uses `std_cmake_args` instead of hardcoded build
    type and install prefix, which resolves certain build issues (see
    [mosra/homebrew-magnum#6](https://github.com/mosra/homebrew-magnum/pull/6))

@subsection changelog-plugins-latest-bugfixes Bug fixes

-   @ref Trade::JpegImageConverter "JpegImageConverter" was mistakenly using
    the `BUILD_STATIC` CMake option instead of `BUILD_PLUGINS_STATIC`
-   Fixed @ref Trade::BasisImporter "BasisImporter" to work with direct
    instantiation without a plugin manager (see [mosra/magnum-plugins#96](https://github.com/mosra/magnum-plugins/pull/96))

@subsection changelog-plugins-latest-deprecated Deprecated APIs

-   Variables `ASSIMP_LIBRARY_{DEBUG,RELEASE}` and `ASSIMP_INCLUDE_DIR` that
    could be used to force Assimp location in `FindAssimp.cmake` are deprecated
    in favor of `Assimp_LIBRARY_{DEBUG,RELEASE}` and `Assimp_INCLUDE_DIR`

@section changelog-plugins-2020-06 2020.06

Released 2020-06-27, tagged as
[v2020.06](https://github.com/mosra/magnum-plugins/releases/tag/v2020.06).

@subsection changelog-plugins-2020-06-new New features

-   Multi-primitive mesh support in @ref Trade::AssimpImporter "AssimpImporter",
    consistent with @ref Trade::TinyGltfImporter "TinyGltfImporter" behavior
    (see [mosra/magnum-plugins#68](https://github.com/mosra/magnum-plugins/pull/68)
    and [mosra/magnum-plugins#81](https://github.com/mosra/magnum-plugins/pull/81))
-   Tangent and bitangent import in @ref Trade::AssimpImporter "AssimpImporter",
    normal texture support
-   Vertex color, normal, texture coordinate and per-vertex object ID import in
    @ref Trade::StanfordImporter "StanfordImporter"; colors, normals and object
    IDs are supported per-face as well
-   Custom vertex and face attribute import in
    @ref Trade::StanfordImporter "StanfordImporter"
-   Support for the `KHR_lights_punctual` extension in
    @ref Trade::TinyGltfImporter "TinyGltfImporter", replacing the obsolete
    unuspported `KHR_lights_cmn` (see [mosra/magnum-plugins#77](https://github.com/mosra/magnum-plugins/pull/77))
-   Support for the `KHR_texture_transform` and `KHR_mesh_quantization`
    extensions in @ref Trade::TinyGltfImporter "TinyGltfImporter"
-   Tangent, object ID and custom vertex attribute support in
    @ref Trade::TinyGltfImporter "TinyGltfImporter", normal texture import
-   @ref Trade::DdsImporter "DdsImporter" and
    @ref Trade::BasisImporter "BasisImporter", now support loading image mip
    levels; @ref Trade::AssimpImporter "AssimpImporter",
    @ref Trade::OpenGexImporter "OpenGexImporter" and
    @ref Trade::TinyGltfImporter "TinyGltfImporter" were updated to proxy mip
    level loading to image importer plugins (see [mosra/magnum#369](https://github.com/mosra/magnum/pull/369))
-   New @ref Trade::IcoImporter "IcoImporter" plugin for importing ICO files
    with embedded PNGs (see [mosra/magnum-plugins#79](https://github.com/mosra/magnum-plugins/pull/79))
-   New @ref Trade::PrimitiveImporter "PrimitiveImporter" plugin for accessing
    contents of the @ref Primitives library via importer APIs
-   New @ref Trade::StanfordSceneConverter "StanfordSceneConverter" for
    writing binary PLY files
-   New @ref Trade::StlImporter "StlImporter" plugin for importing binary STL
    files
-   New @ref Trade::MeshOptimizerSceneConverter "MeshOptimizerSceneConverter"
    plugin, integrating [meshoptimizer](https://github.com/zeux/meshoptimizer)
-   Animated GIF support in @ref Trade::StbImageImporter "StbImageImporter"
-   Texture coordinate set import in @ref Trade::AssimpImporter "AssimpImporter"
    and @ref Trade::TinyGltfImporter "TinyGltfImporter" (see
    [mosra/magnum-plugins#83](https://github.com/mosra/magnum-plugins/pull/83))

@subsection changelog-plugins-2020-06-changes Changes and improvements

-   @ref Trade::AssimpImporter "AssimpImporter" now imports color alpha channel
    in @ref Trade::PhongMaterialData as well as importing both color and
    texture for file formats that support it
-   @ref Trade::DevIlImageImporter "DevIlImageImporter" now also considers file
    extension when detecting file format, being able to open files that don't
    really have any easy-to-detect magic header; additionally the file type can
    be also forced though a plugin-specific configuration option.
-   @ref Trade::DevIlImageImporter "DevIlImageImporter" can now load
    multi-image files such as `*.ico`s or animated GIFs
-   Minor speedup in the @ref Text::StbTrueTypeFont "StbTrueTypeFont" plugin by
    avoiding use of 64-bit floating-point operations (see
    [mosra/magnum-plugins#73](https://github.com/mosra/magnum-plugins/pull/73))
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now supports interleaved
    animation and mesh attributes
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" and
    @ref Trade::OpenGexImporter "OpenGexImporter" now import both color and
    texture information instead of only one of them
-   @ref Trade::AssimpImporter "AssimpImporter" inadvertently ignored base
    orientation for files that are defined with Z up instead of Y, this
    behavior is now also configurable (see [mosra/magnum-plugins#82](https://github.com/mosra/magnum-plugins/pull/82))
-   @ref Trade::AssimpImporter "AssimpImporter",
    @ref Trade::DdsImporter "DdsImporter" and
    @ref Trade::StanfordImporter "StanfordImporter" now recognize the
    @ref Trade::ImporterFlag::Verbose flag, printing verbose messages on the
    output if enabled
-   @ref Trade::StbImageImporter "StbImageImporter" is now thread-safe if
    @ref CORRADE_BUILD_MULTITHREADED is enabled.
-   Library version is now exposed through `MAGNUMPLUGINS_VERSION_YEAR`,
    `MAGNUMPLUGINS_VERSION_MONTH`, `MAGNUMPLUGINS_VERSION_COMMIT`,
    `MAGNUMPLUGINS_VERSION_HASH` and `MAGNUMPLUGINS_VERSION_STRING`
    preprocessor defines in a new `Magnum/versionPlugins.h` header. This header
    is not included by any other header to avoid trigerring a full rebuild when
    Git commit changes. If Git is not found, only the first two defines are
    present.
-   @ref Trade::PngImporter now recognizes and imports gray+alpha files as well
    (see [mosra/magnum-plugins#71](https://github.com/mosra/magnum-plugins/issues/71))

@subsection changelog-plugins-2020-06-buildsystem Build system

-   `FindAssimp.cmake` is updated to look for IrrXML on all systems, not just
    Windows, since Vcpkg has the static build the same on all platforms
-   `FindBasisUniversal.cmake` is updated to work with the Vcpkg package of
    Basis Universal (and consequently builds of the fork at
    https://github.com/jherico/basis_universal as well). See
    [mosra/magnum-plugins#72](https://github.com/mosra/magnum-plugins/pull/72).
-   Disabling file I/O APIs in the @ref Audio::DrFlacImporter "DrFlacAudioImporter"
    as they weren't used and unnecessarily pulled in `windows.h`; fixed static
    builds of @ref Trade::JpegImageConverter "JpegImageConverter" and
    @ref Trade::JpegImporter "JpegImporter" on with libjpeg coming from MSYS2
    MinGW packages (see [mosra/magnum-plugins#74](https://github.com/mosra/magnum-plugins/pull/74))
-   Fixed build of @ref Audio::DrWavImporter "DrWavAudioImporter" on static
    libraries with dynamic plugins (see [mosra/magnum-plugins#78](https://github.com/mosra/magnum-plugins/issues/78))
-   The library again compiles and tests cleanly with @ref CORRADE_NO_ASSERT
    enabled, and this setup is verified on the CI to avoid further regressions
-   Properly installing plugin binaries in Gentoo packages (see
    [mosra/magnum-plugins#85](https://github.com/mosra/magnum-plugins/issues/85))

@subsection changelog-plugins-2020-06-bugfixes Bug fixes

-   @ref Trade::AssimpImporter "AssimpImporter" could crash on a
    division-by-zero when custom file callbacks encounter an empty file
-   Importing one image multiple times with
    @ref Trade::DevIlImageImporter "DevIlImageImporter" would cause it being
    differently flipped every time
-   Fixed a crash in @ref Trade::PngImporter "PngImporter" when encountering
    palette files with less than 8 bits per pixel

@subsection changelog-plugins-2020-06-compatibility Potential compatibility breakages, removed APIs

-   Removed @ref OpenDdl headers in `MagnumPlugins/OpenGexImporter/OpenDdl`
    that were deprecated in 2018.04, include them from the `Magnum/OpenDdl`
    directory instead.
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" translation of PBR
    materials into a Phong shading model left
    @ref Trade::PhongMaterialData::shininess() set at @cpp 1.0f @ce, which
    wasn't a good default. Now it's set to @cpp 80.0f @ce to match defaults
    of @ref Shaders::Phong
-   Support for the [KHR_materials_cmnBlinnPhong](https://github.com/KhronosGroup/glTF/tree/gltf2-common-materials/extensions/Khronos/KHR_materials_cmnBlinnPhong)
    glTF extension has been removed from
    @ref Trade::TinyGltfImporter "TinyGltfImporter", as it seems to be
    effectively abandoned. The branch didn't see any update since 2017 and
    there are no exporters supporting it.
-   The bundled `tiny_gltf` code was updated from `v2.0.0` to `v2.4.1` in order
    to implement support for `KHR_lights_punctual`. A lot happened between
    these two versions including a change in how it parses numeric data. It may
    cause the imported transformations to be slightly different than in
    2019.10, resulting in very minor differences in rendered images,
    particularly on aliased edges. See also [facebookresearch/habitat-sim#496](https://github.com/facebookresearch/habitat-sim/pull/496).
-   @ref Trade::DdsImporter "DdsImporter" now exposes mip levels not as
    separate images, but through the new @p level parameter and
    @ref Trade::AbstractImporter::image2DLevelCount() /
    @ref Trade::AbstractImporter::image3DLevelCount() APIs.

@section changelog-plugins-2019-10 2019.10

Released 2019-10-24, tagged as
[v2019.10](https://github.com/mosra/magnum-plugins/releases/tag/v2019.10).

@subsection changelog-plugins-2019-10-dependencies Dependency changes

-   Minimal supported CMake version is now 3.4. Older versions are not
    supported anymore and all workarounds for them were removed. Download a
    prebuilt release of a newer version if you need to use Corrade on older
    systems (such as Ubuntu 14.04 or Debian 8). This is a conservative change
    that shouldn't affect any additional distribution compared to the CMake 3.1
    requirement in 2019.01.

@subsection changelog-plugins-2019-10-new New features

-   MSVC 2019 compatibility, following other Magnum projects
-   When using Magnum as a CMake subproject, it now puts all binaries into a
    common directory to simplify `PATH` handling and dynamic plugin loading.
    For more information see @ref cmake-plugins-subproject,
    [mosra/magnum#357](https://github.com/mosra/magnum/issues/357) and
    [mosra/magnum-plugins#63](https://github.com/mosra/magnum-plugins/issues/63).
-   New @ref Audio::DrMp3Importer "DrMp3AudioImporter" plugin for importing
    MP3 files (see [mosra/magnum-plugins#60](https://github.com/mosra/magnum-plugins/pull/60))
-   New @ref Trade::BasisImporter "BasisImporter" and
    @ref Trade::BasisImageConverter "BasisImageConverter" plugin for importing
    and converting Basis files, support for Basis-encoded textures in
    @ref Trade::TinyGltfImporter "TinyGltfImporter" (see [mosra/magnum-plugins#62](https://github.com/mosra/magnum-plugins/pull/62),
    [mosra/magnum-plugins#65](https://github.com/mosra/magnum-plugins/pull/65)
    and [mosra/magnum-plugins#69](https://github.com/mosra/magnum-plugins/issues/69))

@subsection changelog-plugins-2019-10-changes Changes and improvements

-   Calling @ref Trade::AbstractImporter::image2D() "image2D()" in
    @ref Trade::AssimpImporter "AssimpImporter",
    @ref Trade::OpenGexImporter "OpenGexImporter" and
    @ref Trade::TinyGltfImporter "TinyGltfImporter" now behaves consistently
    in regards to file loading callbacks --- failing with an error if and only
    if image is not embedded, the file is not opened from a filesystem and file
    loading callbacks are not set. Previously it could errorneously assert even
    when loading embedded images, try to look for images on the filesystem when
    loading in-memory data or fail to open images when a file inside current
    working directory was opened.
-   The @ref Trade::AssimpImporter "AssimpImporter" plugin now detects ambient
    color set to @cpp 0xffffff_srgbf @ce and forces it back to
    @cpp 0x000000_srgbf @ce. This is a bug in Assimp 4.1, causing all other
    color information to get discarded. See also
    [assimp/assimp#2059](https://github.com/assimp/assimp/issues/2059),
    [assimp/assimp#2563](https://github.com/assimp/assimp/pull/2563) and
    [mosra/magnum-plugins#64](https://github.com/mosra/magnum-plugins/pull/64).
-   The @ref Trade::AssimpImporter "AssimpImporter" plugin now trims trailing
    space from image paths in order to deal better with OBJ meshes from hell
    (see [mosra/magnum-plugins#58](https://github.com/mosra/magnum-plugins/pull/58))
-   The @ref Trade::AssimpImporter "AssimpImporter" plugin now imports each
    image just once in case a single image is shared by more than one texture
-   @ref Trade::JpegImporter "JpegImporter" now prints error info to
    @ref Corrade::Utility::Error, allowing it to be redirected or suppressed
    consistently to other plugin implementations (see
    [mosra/magnum-plugins#53](https://github.com/mosra/magnum-plugins/pull/53))
-   @ref Trade::PngImporter "PngImporter" and
    @ref Trade::PngImageConverter "PngImageConverter" now print error and
    warning info to @ref Corrade::Utility::Error and
    @ref Corrade::Utility::Warning, allowing it to be redirected to suppressed
    consistently to other plugin implementations
-   @ref Trade::DevIlImageImporter "DevIlImageImporter" now converts BGR data
    to RGB instead of expanding them to RGBA
-   @ref Trade::DevIlImageImporter "DevIlImageImporter",
    @ref Trade::JpegImporter "JpegImporter",
    @ref Trade::PngImporter "PngImporter" and
    @ref Trade::StbImageConverter "StbImageImporter" now properly report an
    error message when opening an empty file
-   Switched @ref Trade::TinyGltfImporter "TinyGltfImporter" to use
    @ref Corrade::Utility::Directory::read() instead of tiny_gltf's internal
    APIs for loading external files, making it work correctly for UTF-8 paths
    on Windows
-   Better diagnostics in @ref Trade::TinyGltfImporter "TinyGltfImporter" when
    an external buffer file is not found or when a file loaded from memory
    attempts to reference an external buffer without file callbacks being set
-   @ref Audio::DrFlacImporter "DrFlacAudioImporter",
    @ref Audio::DrWavImporter "DrWavAudioImporter" and
    @ref Audio::StbVorbisImporter "StbVorbisAudioImporter" plugins no longer
    treat files with zero samples as errors, but give back an empty buffer
    instead
-   Updated `dr_wav` for @ref Audio::DrWavImporter "DrWavAudioImporter" to
    version 0.8.5 which supports a wider range of file types (see
    [mosra/magnum-plugins#61](https://github.com/mosra/magnum-plugins/pull/61))
-   Actually reporting errors from @ref Text::FreeTypeFont "FreeTypeFont"
    instead of just failing without a message

@subsection changelog-plugins-2019-10-buildsystem Build system

-   @ref building-plugins-packages-msys "MSYS2 packages" are now in official
    repositories, installable directly via `pacman`
-   The @ref Trade::JpegImageConverter "JpegImageConverter" plugin was
    mistakenly using the `JPEG_INCLUDE_DIRS` CMake variable which was not
    present on versions before 3.12. The @ref Trade::JpegImporter "JpegImporter"
    plugin is not affected by this. See also
    [mosra/magnum-plugins#51](https://github.com/mosra/magnum-plugins/issues/51).
-   Upgraded @ref Trade::TinyGltfImporter "TinyGltfImporter" to use json.hpp
    3.3.0, fixing a compile error on some Clang versions (see
    [mosra/magnum-plugins#54](https://github.com/mosra/magnum-plugins/issues/54))
-   Fixed `FindMagnumPlugins.cmake` to behave correctly when both a debug and
    a release version of libjpeg is found
-   Fixed `FindMagnumPlugins.cmake` to correctly handle the `AssimpImporter`,
    and `JpegImageConverter` components
-   `FindMagnumPlugins.cmake` now correctly finds debug versions of statically
    built plugins when using Vcpkg
-   Fixed `FindMagnumPlugins.cmake` to correctly link to zlib also when both
    a debug and a release version of libpng is found
-   `FindAssimp.cmake` now can optionally link to the IrrXML library (needed
    for static builds on Vcpkg)
-   Emscripten builds now have the `-fPIC` option disabled by default as it
    causes linker errors related to `__memory_base` on 1.38.36 (see also
    [emscripten-core/emscripten#8761](https://github.com/emscripten-core/emscripten/issues/8761))

@subsection changelog-plugins-2019-10-bugfixes Bug fixes

-   @ref Trade::AssimpImporter "AssimpImporter" was returning a random value
    for material shininess with STL models, now it correctly returns
    @cpp 0.0f @ce when the shininess value is not present.
-   For files that had multiple textures,
    @ref Trade::AssimpImporter "AssimpImporter" was incorrectly importing only
    the first image, multiple times. Fixed independently also by
    [mosra/magnum-plugins#66](https://github.com/mosra/magnum-plugins/pull/66)
    which got submitted three minutes after the change was pushed to `master`.
-   @ref Trade::StbImageImporter "StbImageImporter" was not correctly handling
    image import failures, randomly hitting unreachable code assertions
-   Fixed @ref Trade::DevIlImageImporter "DevIlImageImporter" BGR(A)-to-RGB(A)
    conversion to not return random memory
-   @ref Trade::PngImporter "PngImporter" now handles too short files
    gracefully instead of aborting on an assertion
-   @ref Trade::PngImporter "PngImporter" now handles paletted images and
    images with tRNS alpha mask correctly
-   Fixed memory leaks in @ref Trade::PngImporter "PngImporter" error handling
-   Fixed `FindMagnumPlugins.cmake` to correctly look for the `Assimp` package
-   Fixed handling of corrupted / incomplete data in
    @ref Text::StbTrueTypeFont "StbTrueTypeFont" (see
    [mosra/magnum-plugins#29](https://github.com/mosra/magnum-plugins/issues/29))

@subsection changelog-plugins-2019-10-compatibility Potential compatibility breakages, removed APIs

-   Removed the `ColladaImporter` plugin, deprecated since 2018.10, because it
    was based on an outdated toolkit and, due to the complexity of the COLLADA
    format and poor conformance of various exporters, it was not feasible to
    maintain a builtin importer anymore.

@section changelog-plugins-2019-01 2019.01

Released 2019-02-04, tagged as
[v2019.01](https://github.com/mosra/magnum-plugins/releases/tag/v2019.01).

@subsection changelog-plugins-2019-01-dependencies Dependency changes

-   Minimal supported GCC version is now 4.8.1, GCC 4.7 is not supported
    anymore. Minimal Clang version is now 3.3, since that's the first version
    with a complete C++11 support. See also
    [mosra/magnum#274](https://github.com/mosra/magnum/issues/274).
-   Minimal supported CMake version is now 3.1. Older versions are not
    supported anymore and all workarounds for them were removed. Download a
    prebuilt release of a newer version if you need to use Corrade on older
    systems (such as Ubuntu 14.04 or Debian 8). See also
    [mosra/magnum#274](https://github.com/mosra/magnum/issues/274).

@subsection changelog-plugins-2019-01-new New features

-   New @ref Audio::Faad2Importer "Faad2AudioImporter" plugin for importing
    AAC files using [FAAD2](https://www.audiocoding.com/faad2.html)

@subsection changelog-plugins-2019-01-changes Changes and improvements

-   Fixed compatibility of the @ref OpenDdl library with Emscripten 1.38.10
    and newer, which defines @ref std::size_t as @cpp unsigned long @ce instead
    of @cpp unsigned int @ce used previously (it's still a four-byte type,
    though)

@subsection changelog-plugins-2019-01-buildsystem Build system

-   The `package/msys` directory now contains `PKGBUILD`s for
    [MSYS2](https://www.msys2.org/). See @ref building-plugins-packages-msys
    for more information. See also [mosra/magnum-plugins#50](https://github.com/mosra/magnum-plugins/pull/50).
-   The bundled `FindAssimp.cmake` module now works under MinGW as well.

@subsection changelog-plugins-2019-01-compatibility Potential compatibility breakages, removed APIs

-   Removed `MAGNUMPLUGINS_*_LIBRARIES` and `MAGNUMPLUGINS_*_INCLUDE_DIRS`
    CMake variables, which were deprecated in favor of `MagnumPlugins::*`
    imported targets in February 2016.

@section changelog-plugins-2018-10 2018.10

Released 2018-10-23, tagged as
[v2018.10](https://github.com/mosra/magnum-plugins/releases/tag/v2018.10).

@subsection changelog-plugins-2018-10-new New features

-   Support for object transformation animation import in
    @ref Trade::TinyGltfImporter "TinyGltfImporter" (see
    [mosra/magnum-plugins#46](https://github.com/mosra/magnum-plugins/pull/46))
-   New @ref Trade::JpegImageConverter plugin for writing JPEG files (see
    [mosra/magnum-plugins#26](https://github.com/mosra/magnum-plugins/pull/26))
-   Minimal support for the [KHR_materials_pbrSpecularGlossiness](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness)
    extension in @ref Trade::TinyGltfImporter "TinyGltfImporter"
-   The top-level `tinygltf::Model` structure is now exposed through
    @ref Trade::TinyGltfImporter::importerState() for easier access to extra
    data, exposing also @ref Trade::SceneData::importerState() and
    @ref Trade::TextureData::importerState()
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now implements mapping
    between names and IDs for all currently imported data
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now imports alpha mode,
    alpha mask and double sided material properties
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now imports all camera
    properties together with type and aspect ratio / projection size
-   @ref Trade::AssimpImporter "AssimpImporter", @ref Trade::OpenGexImporter "OpenGexImporter"
    and @ref Trade::TinyGltfImporter "TinyGltfImporter" now support
    @cpp Trade::AbstractImporter::Feature::FileCallback @ce for specifying
    custom callbacks to load extra files (see
    [mosra/magnum-plugins#47](https://github.com/mosra/magnum-plugins/pull/47))
-   @ref Trade::StbImageConverter "StbImageConverter" was updated with a new
    version of `stb_image_write`, supporting also JPEG export now (see
    [mosra/magnum-plugins#26](https://github.com/mosra/magnum-plugins/pull/26))
-   @ref Text::StbTrueTypeFont "StbTrueTypeFont" was updated with a new version
    of `stb_truetype`, supporting also OpenType fonts now
-   @ref Text::FreeTypeFont "FreeTypeFont", @ref Text::HarfBuzzFont "HarfBuzzFont"
    and @ref Text::StbTrueTypeFont "StbTrueTypeFont" plugins can now be loaded
    also using the `OpenTypeFont` alias, in addition to `TrueTypeFont

@subsection changelog-plugins-2018-10-changes Changes and improvements

-   Texture coordinate, color vertex attribute and base object color import in
    @ref Trade::TinyGltfImporter "TinyGltfImporter"
    (see [mosra/magnum-plugins#41](https://github.com/mosra/magnum-plugins/pull/41),
    [mosra/magnum-plugins#43](https://github.com/mosra/magnum-plugins/pull/43))
-   Mesh name and complete multi-primitive mesh loading in
    @ref Trade::TinyGltfImporter "TinyGltfImporter" (see
    [mosra/magnum-plugins#48](https://github.com/mosra/magnum-plugins/issues/48))
-   @ref Trade::OpenGexImporter "OpenGexImporter" and
    @ref Trade::TinyGltfImporter "TinyGltfImporter" now properly import alpha
    for @ref Trade::PhongMaterialData
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now exposes the
    translation/rotation/scaling properties of @ref Trade::ObjectData3D
    separately if they are separate in the source file
-   @ref Text::HarfBuzzFont "HarfBuzzFont" is now providing `TrueTypeFont`,
    similarly to other plugins supporting TTF fonts
-   @ref Trade::StbImageImporter "StbImageImporter" now properly supports Apple
    proprietary [CgBI PNGs](http://iphonedevwiki.net/index.php/CgBI_file_format).
    Stock `libPNG` doesn't support that but there are forks that can do it,
    updated documentation of @ref Trade::PngImporter "PngImporter" to mention
    that.
-   @ref Trade::StbImageConverter "StbImageConverter" no longer requires input
    data to be tightly packed, allowing to export image subrectangles
-   @ref Trade::StbImageConverter "StbImageConverter" now prints warnings when
    channels are lost on output due to limitations of the output format (such
    as alpha channel for JPEGs)
-   @ref Trade::TinyGltfImporter::defaultScene() now returns the first scene
    if no default scene is present in the file
-   New @ref Trade::TinyGltfImporter::TinyGltfImporter(PluginManager::Manager<Trade::AbstractImporter>&)
    constructor for easier usage of statically-built plugins
-   Cleaned up some unnecessary memory copies and reallocations in the
    @ref Trade::TinyGltfImporter "TinyGltfImporter" implementation
-   Upstreamed local patches to `tiny_gltf` (see
    [mosra/magnum-plugins#45](https://github.com/mosra/magnum-plugins/pull/45))

@subsection changelog-plugins-2018-10-buildsystem Build system

-   There's now a PPA for Ubuntu packages. See @ref building-plugins-packages-deb
    for more information. See also
    [mosra/magnum-plugins#44](https://github.com/mosra/magnum-plugins/pull/44).
-   TinyGLTF headers are now installed alongside the plugin for easier access
    to importer state. See @ref Trade-TinyGltfImporter-state for more
    information.
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" no longer depends on
    @ref Trade::StbImageImporter "StbImageImporter" to import images embedded
    in buffers or data URIs. Instead it proxies the loading to
    @ref Trade::AnyImageImporter "AnyImageImporter", the same way as was
    already done for external files.

@subsection changelog-plugins-2018-10-bugfixes Bug fixes

-   Fixed a @ref Trade::TinyGltfImporter "TinyGltfImporter" crash on materials
    without a PBR extension (see [mosra/magnum-plugins#41](https://github.com/mosra/magnum-plugins/pull/41))
-   Fixed improper order of applying translation/rotation/scaling node
    transformations in @ref Trade::TinyGltfImporter "TinyGltfImporter"
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now loads external images
    from `*.glb` files and images embedded as URI data properly
-   @ref Trade::TinyGltfImporter "TinyGltfImporter" now properly imports
    non-indexed meshes and meshes without the normal attribute
-   Fixed quite a few critical issues with @ref Trade::TinyGltfImporter "TinyGltfImporter"
    mesh data import (see [mosra/magnum-plugins#42](https://github.com/mosra/magnum-plugins/issues/42))
-   Updated `stb_image` to fix `undefined symbol: __cpu_model` error when
    compiling @ref Trade::StbImageImporter "StbImageImporter" on GCC 5
-   @ref Trade::AssimpImporter "AssimpImporter" now properly prints out an
    message on file opening error instead of failing silently
-   @ref Trade::AssimpImporter "AssimpImporter" incorrectly imported object
    transformation matrices transposed
-   @ref Trade::AssimpImporter "AssimpImporter" incorrectly imported the scene
    twice, once as a scene and once as a object that all other objects were
    parented to. However, in presence of postprocessing flags such as
    `PreTransformVertices` Assimp collapses all nodes into one and then the
    node is imported as a single object.
-   @ref Text::FreeTypeFont "FreeTypeFont" was not handling subsequent calls
    to @ref Text::FreeTypeFont::initialize() properly (see
    [mosra/magnum-plugins#49](https://github.com/mosra/magnum-plugins/pull/49))

@subsection corrade-changelog-2018-10-deprecated Deprecated APIs

-   `ColladaImporter` is deprecated because it's based on an outdated toolkit.
    Moreover, due to the complexity of the COLLADA format and poor conformance
    of various exporters it's not feasible to maintain a builtin importer
    anymore and thus this plugin is scheduled for removal in a future release.
    Please consider either using @ref Trade::AssimpImporter "AssimpImporter"
    for COLLADA import or switching to simpler and better supported formats
    such as glTF or OpenGEX using @ref Trade::TinyGltfImporter "TinyGltfImporter"
    or @ref Trade::OpenGexImporter "OpenGexImporter". There's also the official
    [COLLADA2GLTF](https://github.com/KhronosGroup/COLLADA2GLTF) converter.

Changelogs for previous versions are available in
@ref changelog-plugins-old "Archived plugin changelogs".

*/

}
